{"version":3,"file":"booking.js","sources":["pages/customer/booking.vue","../HX/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY3VzdG9tZXIvYm9va2luZy52dWU"],"sourcesContent":["<template>\r\n  <view class=\"booking-page\">\r\n    <!-- 服务信息 -->\r\n    <view class=\"service-info\">\r\n      <view class=\"service-name\">{{ service.name }}</view>\r\n      <view class=\"service-meta\">\r\n        <text class=\"merchant-name\">{{ service.merchant.name }}</text>\r\n        <text class=\"service-price\">¥{{ service.price }}</text>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 预约信息表单 -->\r\n    <view class=\"booking-form\">\r\n      <!-- 选择日期 -->\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">预约日期</view>\r\n        <u-datetime-picker \r\n          v-model=\"dateTime\" \r\n          mode=\"date\" \r\n          :min-date=\"minDate\" \r\n          :max-date=\"maxDate\" \r\n          @confirm=\"handleDateConfirm\"\r\n          placeholder=\"请选择预约日期\"\r\n        ></u-datetime-picker>\r\n      </view>\r\n      \r\n      <!-- 选择时间段 -->\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">预约时间</view>\r\n        <view class=\"time-slots\" v-if=\"availableSlots.length > 0\">\r\n          <view \r\n            class=\"time-slot\" \r\n            v-for=\"slot in availableSlots\" \r\n            :key=\"slot.time\"\r\n            :class=\"{ 'selected': selectedSlot === slot.time }\"\r\n            @click=\"selectTimeSlot(slot.time)\"\r\n          >\r\n            {{ slot.time }}\r\n          </view>\r\n        </view>\r\n        <view v-else class=\"no-slots\">\r\n          <text>暂无可用时间段</text>\r\n        </view>\r\n      </view>\r\n      \r\n      <!-- 预约备注 -->\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">备注信息</view>\r\n        <u-input \r\n          v-model=\"remark\" \r\n          type=\"textarea\" \r\n          placeholder=\"请输入备注信息（选填）\" \r\n          maxlength=\"200\"\r\n          show-word-limit\r\n        ></u-input>\r\n      </view>\r\n      \r\n      <!-- 预约人信息 -->\r\n      <view class=\"form-item\">\r\n        <view class=\"label\">联系人</view>\r\n        <u-input \r\n          v-model=\"contactName\" \r\n          placeholder=\"请输入联系人姓名\"\r\n          maxlength=\"20\"\r\n        ></u-input>\r\n      </view>\r\n      \r\n      <view class=\"form-item\">\r\n        <view class=\"label\">联系电话</view>\r\n        <u-input \r\n          v-model=\"contactPhone\" \r\n          type=\"number\" \r\n          placeholder=\"请输入联系电话\"\r\n          maxlength=\"11\"\r\n        ></u-input>\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 底部提交按钮 -->\r\n    <view class=\"bottom-bar\">\r\n      <u-button :loading=\"submitLoading\" @click=\"submitBooking\" type=\"primary\" class=\"submit-btn\">确认预约</u-button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { serviceService, orderService } from '../../utils/mockService.js'\r\n\r\nconst service = ref({\r\n  id: '',\r\n  name: '',\r\n  price: 0,\r\n  duration: 0,\r\n  merchant: {\r\n    id: '',\r\n    name: ''\r\n  }\r\n})\r\n\r\nconst loading = ref(false)\r\nconst submitLoading = ref(false)\r\nconst dateTime = ref('')\r\nconst selectedDate = ref('')\r\nconst selectedSlot = ref('')\r\nconst remark = ref('')\r\nconst contactName = ref('')\r\nconst contactPhone = ref('')\r\nconst availableSlots = ref([])\r\n\r\n// 计算最小和最大可预约日期\r\nconst minDate = ref(new Date())\r\nconst maxDate = ref(() => {\r\n  const date = new Date()\r\n  date.setDate(date.getDate() + 30) // 最多可预约30天内\r\n  return date\r\n})()\r\n\r\n// 生成可用时间段（模拟数据）\r\nconst generateTimeSlots = (date) => {\r\n  // 模拟数据：上午10点到下午8点，每30分钟一个时间段\r\n  const slots = []\r\n  const startHour = 10\r\n  const endHour = 20\r\n  const intervalMinutes = 30\r\n  \r\n  for (let hour = startHour; hour < endHour; hour++) {\r\n    for (let minutes = 0; minutes < 60; minutes += intervalMinutes) {\r\n      const timeStr = `${hour.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`\r\n      slots.push({\r\n        time: timeStr,\r\n        available: true // 模拟所有时间段都可用\r\n      })\r\n    }\r\n  }\r\n  \r\n  return slots\r\n}\r\n\r\n// 获取服务详情\r\nconst fetchServiceDetail = async (serviceId) => {\r\n  if (loading.value) return\r\n  \r\n  loading.value = true\r\n  \r\n  try {\r\n    const res = await serviceService.getServiceDetail(serviceId)\r\n    if (res.success) {\r\n      service.value = res.data\r\n    } else {\r\n      uni.showToast({ title: '获取服务详情失败', icon: 'none' })\r\n      setTimeout(() => {\r\n        uni.navigateBack()\r\n      }, 1500)\r\n    }\r\n  } catch (error) {\r\n    console.error('获取服务详情失败', error)\r\n    uni.showToast({ title: '获取服务详情失败', icon: 'none' })\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 选择日期\r\nconst selectDate = (date) => {\r\n  selectedDate.value = date\r\n  // 生成对应日期的可用时间段\r\n  availableSlots.value = generateTimeSlots(date)\r\n  // 重置选中的时间段\r\n  selectedSlot.value = ''\r\n}\r\n\r\n// 选择时间段\r\nconst selectSlot = (slot) => {\r\n  if (!slot.available) return\r\n  selectedSlot.value = slot.time\r\n  // 设置完整的预约时间\r\n  dateTime.value = `${selectedDate.value} ${selectedSlot.value}`\r\n}\r\n\r\n// 提交预约\r\nconst submitBooking = async () => {\r\n  if (submitLoading.value) return\r\n  \r\n  // 表单验证\r\n  if (!selectedDate.value) {\r\n    uni.showToast({ title: '请选择预约日期', icon: 'none' })\r\n    return\r\n  }\r\n  \r\n  if (!selectedSlot.value) {\r\n    uni.showToast({ title: '请选择预约时间段', icon: 'none' })\r\n    return\r\n  }\r\n  \r\n  if (!contactName.value.trim()) {\r\n    uni.showToast({ title: '请输入联系人姓名', icon: 'none' })\r\n    return\r\n  }\r\n  \r\n  if (!contactPhone.value || contactPhone.value.length !== 11) {\r\n    uni.showToast({ title: '请输入正确的联系电话', icon: 'none' })\r\n    return\r\n  }\r\n  \r\n  submitLoading.value = true\r\n  \r\n  try {\r\n    // 检查登录状态\r\n    const app = getApp()\r\n    if (!app.globalData.isLogin) {\r\n      uni.showToast({ title: '请先登录', icon: 'none' })\r\n      setTimeout(() => {\r\n        uni.navigateTo({ url: '/pages/auth/login' })\r\n      }, 1000)\r\n      return\r\n    }\r\n    \r\n    // 提交预约信息\r\n    const bookingData = {\r\n      serviceId: service.value.id,\r\n      bookingTime: dateTime.value,\r\n      contactName: contactName.value,\r\n      contactPhone: contactPhone.value,\r\n      remark: remark.value\r\n    }\r\n    \r\n    const res = await orderService.createBooking(bookingData)\r\n    if (res.success) {\r\n      uni.showToast({ title: '预约成功', icon: 'success' })\r\n      // 预约成功后跳转到订单列表\r\n      setTimeout(() => {\r\n        uni.navigateTo({\r\n          url: '/pages/customer/orders'\r\n        })\r\n      }, 1500)\r\n    } else {\r\n      uni.showToast({ title: res.message || '预约失败', icon: 'none' })\r\n    }\r\n  } catch (error) {\r\n    console.error('预约失败', error)\r\n    uni.showToast({ title: '预约失败', icon: 'none' })\r\n  } finally {\r\n    submitLoading.value = false\r\n  }\r\n}\r\n\r\n// 页面加载时获取服务详情\r\nonLoad((options) => {\r\n  if (options && options.id) {\r\n    fetchServiceDetail(options.id)\r\n  } else {\r\n    uni.showToast({ title: '参数错误', icon: 'none' })\r\n    setTimeout(() => {\r\n      uni.navigateBack()\r\n    }, 1500)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.booking-page {\r\n  padding-bottom: 120rpx;\r\n}\r\n\r\n.service-info {\r\n  padding: 30rpx 20rpx;\r\n  background-color: #fff;\r\n  border-bottom: 1rpx solid #eee;\r\n}\r\n\r\n.service-name {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 12rpx;\r\n}\r\n\r\n.service-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 28rpx;\r\n}\r\n\r\n.merchant-name {\r\n  color: #666;\r\n}\r\n\r\n.service-price {\r\n  color: #E64340;\r\n  font-weight: bold;\r\n}\r\n\r\n.booking-form {\r\n  margin-top: 20rpx;\r\n  padding: 20rpx;\r\n  background-color: #fff;\r\n}\r\n\r\n.form-item {\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.label {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.time-slots {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16rpx;\r\n}\r\n\r\n.time-slot {\r\n  padding: 16rpx 28rpx;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8rpx;\r\n  font-size: 26rpx;\r\n  color: #666;\r\n}\r\n\r\n.time-slot.selected {\r\n  background-color: #1989fa;\r\n  color: #fff;\r\n}\r\n\r\n.no-slots {\r\n  padding: 40rpx 0;\r\n  text-align: center;\r\n  color: #999;\r\n  font-size: 26rpx;\r\n}\r\n\r\n.bottom-bar {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 20rpx;\r\n  background-color: #fff;\r\n  border-top: 1rpx solid #eee;\r\n}\r\n\r\n.submit-btn {\r\n  width: 100%;\r\n}\r\n</style>```","import MiniProgramPage from 'F:/demo/pages/customer/booking.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","serviceService","uni","orderService"],"mappings":";;;;;;;;;;;;AAyFA,UAAM,UAAUA,cAAAA,IAAI;AAAA,MAClB,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,UAAU;AAAA,QACR,IAAI;AAAA,QACJ,MAAM;AAAA,MACP;AAAA,IACH,CAAC;AAED,UAAM,UAAUA,cAAG,IAAC,KAAK;AACzB,UAAM,gBAAgBA,cAAG,IAAC,KAAK;AAC/B,UAAM,WAAWA,cAAG,IAAC,EAAE;AACvB,UAAM,eAAeA,cAAG,IAAC,EAAE;AAC3B,UAAM,eAAeA,cAAG,IAAC,EAAE;AAC3B,UAAM,SAASA,cAAG,IAAC,EAAE;AACrB,UAAM,cAAcA,cAAG,IAAC,EAAE;AAC1B,UAAM,eAAeA,cAAG,IAAC,EAAE;AAC3B,UAAM,iBAAiBA,cAAG,IAAC,EAAE;AAG7B,UAAM,UAAUA,cAAAA,IAAI,oBAAI,MAAM;AAC9B,UAAM,UAAUA,cAAG,IAAC,MAAM;AACxB,YAAM,OAAO,oBAAI,KAAM;AACvB,WAAK,QAAQ,KAAK,QAAO,IAAK,EAAE;AAChC,aAAO;AAAA,IACT,CAAC,EAAG;AAwBJ,UAAM,qBAAqB,OAAO,cAAc;AAC9C,UAAI,QAAQ;AAAO;AAEnB,cAAQ,QAAQ;AAEhB,UAAI;AACF,cAAM,MAAM,MAAMC,iCAAe,iBAAiB,SAAS;AAC3D,YAAI,IAAI,SAAS;AACf,kBAAQ,QAAQ,IAAI;AAAA,QAC1B,OAAW;AACLC,wBAAG,MAAC,UAAU,EAAE,OAAO,YAAY,MAAM,QAAQ;AACjD,qBAAW,MAAM;AACfA,0BAAAA,MAAI,aAAc;AAAA,UACnB,GAAE,IAAI;AAAA,QACR;AAAA,MACF,SAAQ,OAAO;AACdA,sBAAAA,MAAA,MAAA,SAAA,qCAAc,YAAY,KAAK;AAC/BA,sBAAG,MAAC,UAAU,EAAE,OAAO,YAAY,MAAM,QAAQ;AAAA,MACrD,UAAY;AACR,gBAAQ,QAAQ;AAAA,MACjB;AAAA,IACH;AAoBA,UAAM,gBAAgB,YAAY;AAChC,UAAI,cAAc;AAAO;AAGzB,UAAI,CAAC,aAAa,OAAO;AACvBA,sBAAG,MAAC,UAAU,EAAE,OAAO,WAAW,MAAM,QAAQ;AAChD;AAAA,MACD;AAED,UAAI,CAAC,aAAa,OAAO;AACvBA,sBAAG,MAAC,UAAU,EAAE,OAAO,YAAY,MAAM,QAAQ;AACjD;AAAA,MACD;AAED,UAAI,CAAC,YAAY,MAAM,QAAQ;AAC7BA,sBAAG,MAAC,UAAU,EAAE,OAAO,YAAY,MAAM,QAAQ;AACjD;AAAA,MACD;AAED,UAAI,CAAC,aAAa,SAAS,aAAa,MAAM,WAAW,IAAI;AAC3DA,sBAAG,MAAC,UAAU,EAAE,OAAO,cAAc,MAAM,QAAQ;AACnD;AAAA,MACD;AAED,oBAAc,QAAQ;AAEtB,UAAI;AAEF,cAAM,MAAM,OAAQ;AACpB,YAAI,CAAC,IAAI,WAAW,SAAS;AAC3BA,wBAAG,MAAC,UAAU,EAAE,OAAO,QAAQ,MAAM,QAAQ;AAC7C,qBAAW,MAAM;AACfA,0BAAAA,MAAI,WAAW,EAAE,KAAK,oBAAmB,CAAE;AAAA,UAC5C,GAAE,GAAI;AACP;AAAA,QACD;AAGD,cAAM,cAAc;AAAA,UAClB,WAAW,QAAQ,MAAM;AAAA,UACzB,aAAa,SAAS;AAAA,UACtB,aAAa,YAAY;AAAA,UACzB,cAAc,aAAa;AAAA,UAC3B,QAAQ,OAAO;AAAA,QAChB;AAED,cAAM,MAAM,MAAMC,+BAAa,cAAc,WAAW;AACxD,YAAI,IAAI,SAAS;AACfD,wBAAG,MAAC,UAAU,EAAE,OAAO,QAAQ,MAAM,WAAW;AAEhD,qBAAW,MAAM;AACfA,0BAAAA,MAAI,WAAW;AAAA,cACb,KAAK;AAAA,YACf,CAAS;AAAA,UACF,GAAE,IAAI;AAAA,QACb,OAAW;AACLA,8BAAI,UAAU,EAAE,OAAO,IAAI,WAAW,QAAQ,MAAM,QAAQ;AAAA,QAC7D;AAAA,MACF,SAAQ,OAAO;AACdA,sBAAAA,0DAAc,QAAQ,KAAK;AAC3BA,sBAAG,MAAC,UAAU,EAAE,OAAO,QAAQ,MAAM,QAAQ;AAAA,MACjD,UAAY;AACR,sBAAc,QAAQ;AAAA,MACvB;AAAA,IACH;AAGA,WAAO,CAAC,YAAY;AAClB,UAAI,WAAW,QAAQ,IAAI;AACzB,2BAAmB,QAAQ,EAAE;AAAA,MACjC,OAAS;AACLA,sBAAG,MAAC,UAAU,EAAE,OAAO,QAAQ,MAAM,QAAQ;AAC7C,mBAAW,MAAM;AACfA,wBAAAA,MAAI,aAAc;AAAA,QACnB,GAAE,IAAI;AAAA,MACR;AAAA,IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChQD,GAAG,WAAW,eAAe;"}